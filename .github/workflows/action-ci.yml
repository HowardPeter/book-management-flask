name: Action CI for backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # build-auth-api:
  #   name: Build & Test Auth API
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: auth-api
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.12'

  #     - name: Cache pip dependencies
  #       id: cache-pip
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.cache/pip
  #         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pip-

  #     - name: Install dependencies
  #       # if: steps.cache-pip.outputs.cache-hit != 'true'
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
    
  #     - name: Run tests
  #       run: python -m unittest discover -s tests -p "test_*.py"

  # build-books-api:
  #   name: Build & Test Books API
  #   needs: build-auth-api
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: books-api
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.12'

  #     - name: Cache pip dependencies
  #       id: cache-pip
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.cache/pip
  #         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pip-

  #     - name: Install dependencies
  #       if: steps.cache-pip.outputs.cache-hit != 'true'
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
    
  #     - name: Run tests
  #       run: python -m unittest discover -s tests -p "test_*.py"

  build-frontend:
    name: Build React Vite Frontend
    # needs: build-books-api
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front-end
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      
      - name: Cache Node modules  
        id: cache-npm  
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-
      
      - name: Install dependencies
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build
        run: npm run build